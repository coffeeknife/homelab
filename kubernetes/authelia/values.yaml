configMap:
  session:
    cookies: [ { domain: wrenspace.dev, subdomain: auth } ]

  storage:
    mysql:
      enabled: true
      deploy: false
      address: tcp://mariadb-port.mariadb-sys.svc.cluster.local:3306
      database: authelia
      password:
        secret_name: db-auth

  notifier:
    smtp:
      enabled: true
      address: smtp://send.smtp-relay.svc.cluster.local
      sender: "Accounts <admin@wrenspace.dev>"
      disable_html_emails: true
      password: # temporary for testing
        disabled: true
      disable_require_tls: true

  authentication_backend:
    ldap:
      enabled: true
      implementation: lldap
      address: ldaps://lldap.lldap.svc.cluster.local:6360
      tls:
        server_name: id.wrenspace.dev
      base_dn: dc=wrenspace,dc=dev
      user: uid=search,ou=people,dc=wrenspace,dc=dev
      password: { secret_name: lldap-auth }

  identity_providers:
    oidc:
      enabled: true
      jwks:
        - key_id: default
          algorithm: RS256
          use: sig
          key: { path: /secrets/jwk-rsa/private.pem }
      cors:
        endpoints: [ userinfo, authorization, token, revocation, introspection ]
        allowed_origins_from_client_redirect_uris: true
      claims_policies:
        legacy:
          id_token: [ email, email_verified, alt_emails, name, preferred_username, groups ]

      # CLIENTS HERE
      clients:
        # nextcloud
        - client_id: nextcloud
          client_name: Nextcloud
          client_secret: { path: /secrets/client-secrets/nextcloud.secret.txt }
          public: false
          authorization_policy: two_factor
          require_pkce: true
          pkce_challenge_method: S256
          redirect_uris: [ https://drive.wrenspace.dev/apps/oidc_login/oidc ]
          scopes: [ openid, profile, email, groups ]
          response_types: [ code ]
          grant_types: [ authorization_code ]
          access_token_signed_response_alg: none
          userinfo_signed_response_alg: none
          token_endpoint_auth_method: client_secret_basic

        # paperless
        - client_id: paperless
          client_name: Paperless-NGX
          client_secret: { path: /secrets/client-secrets/paperless.secret.txt }
          public: false
          authorization_policy: two_factor
          require_pkce: true
          pkce_challenge_method: S256
          redirect_uris: [ https://file.wrenspace.dev/accounts/oidc/authelia/login/callback/ ]
          scopes: [ openid, profile, email, groups ]
          response_types: [ code ]
          grant_types: [ authorization_code ]
          access_token_signed_response_alg: none
          userinfo_signed_response_alg: none
          token_endpoint_auth_method: client_secret_basic


secret:
  existingSecret: crypto
  additionalSecrets:
    lldap-auth:
      items: [ { key: password, path: authentication.ldap.password.txt } ]
    db-auth:
      items: [ { key: password, path: storage.mysql.password.txt } ]
    jwk-rsa:
      items: [ { key: private.pem, path: private.pem } ]
    client-secrets: {}

# temp
pod:
  kind: Deployment

ingress:
  enabled: true
  className: traefik
  certManager: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: cert-issuer
  tls:
    enabled: true
    secret: authelia-tls-cert